DELIMITERS = "<.>" "<!>" "<?>" "<..>" "<...>" "<¶>" ;
SOFT-DELIMITERS = "<,>" ;
#OPTIONS += no-inline-sets no-inline-templates ;
OPTIONS += no-inline-templates ;
SUBREADINGS = LTR ; # Alternate, left-to-right (main reading on the left)

SETS

LIST BOS = (>>>) ;
LIST EOS = (<<<) ;

LIST Verb = vblex vbser vbhaver vbmod ;
LIST V = vblex ;
LIST Pron = prn ;
LIST Haver = vbhaver ;
LIST Ser = vbser ;
LIST Vbmod = vbmod ;
LIST Cm = cm ;
LIST Det = det ;
LIST Def = def ;
LIST Pos = pos ;
LIST Prep = pr ;
LIST Subj = subj ;
LIST Prop = np ;
LIST A = adj ;
LIST Adv = adv ;
LIST Preadv = preadv ;
LIST Predet = predet ;
LIST CnjAdv = cnjadv ;
LIST CnjCoo = cnjcoo ;
LIST CnjSub = cnjsub ;
LIST Num = num ;
LIST Prs = prs ;
LIST Pro = pro ;
LIST Tn = tn ;
LIST Imper = imp ;
LIST Pri = pri ;
LIST Prn = prn ;
LIST N = n ;
LIST NP = np ;

LIST Interr = itg ;
LIST Rel = rel ;
LIST Interj = ij ;

LIST Masc_strict = m ;
LIST Fem_strict = f ;
LIST Masc = m mf ;
LIST Fem = f mf ;
LIST Sg = sg sp ;
LIST Pl = pl sp ;
LIST Sp = sp ;
LIST Sg_Pl = sg pl ;
SET MascSg = (m sg) OR (m sp) OR (mf sg) OR (mf sp) ;
SET MascPl = (m pl) OR (m sp) OR (mf pl) OR (mf sp) ;
SET FemSg = (f sg) OR (f sp) OR (mf sg) OR (mf sp) ;
SET FemPl = (f pl) OR (f sp) OR (mf pl) OR (mf sp) ;

LIST P1 = p1 ;
LIST P2 = p2 ;
LIST P3 = p3 ;
LIST Sg1 = (p1 sg) ;
LIST Sg2 = (p2 sg) ;
LIST VSg1 = (vblex p1 sg) (vbser p1 sg) (vbhaver p1 sg) (vbmod p1 sg);
LIST VSg2 = (vblex p2 sg) (vbser p2 sg) (vbhaver p2 sg) (vbmod p2 sg);
LIST VSg3 = (vblex p3 sg) (vbser p3 sg) (vbhaver p3 sg) (vbmod p3 sg);
LIST VPl1 = (vblex p1 pl) (vbser p1 pl) (vbhaver p1 pl) (vbmod p1 pl);
LIST VPl2 = (vblex p2 pl) (vbser p2 pl) (vbhaver p2 pl) (vbmod p2 pl);
LIST VPl3 = (vblex p3 pl) (vbser p3 pl) (vbhaver p3 pl) (vbmod p3 pl);

LIST Fin = pri prs pii ifi pis cni imp ;
LIST Ifi = ifi ;
LIST Pri = pri ;
LIST Inf = inf ;
LIST PP = pp ;

LIST Mon_Ton_Son = "mon" "ton" "son" ;
LIST Que = "que" ;
LIST Qui = "qui" ;
LIST Avoir = "avoir" ; 
LIST Savoir = "savoir" ; 
LIST Saurer = "saurer" ; 
LIST Le = "le" ;
LIST Fait = "<fait>"i ;
LIST Est = "<est>"i ;
LIST Je = "je" ;
LIST Tu = "tu" ;
LIST Il = "il" ;
LIST Nous = "nous" ;
LIST Vous = "vous" ;
LIST Lui = "lui" ;
LIST Eux = "eux" ;
LIST En = "en" ; 
LIST Pas = "pas" ; 
LIST Ne = "ne" ; 
LIST Aussi = "aussi" ; 
LIST Même = "même" ; 
LIST Devoir = "devoir" ;
LIST Être = "être" ;

LIST Fil = "fil" ;
LIST Fils = "fils" ;
LIST Foi = "foi" ;
LIST Fois = "fois" ;
LIST Mille = "mille" ;
LIST Mil = "mil" ;
LIST Somme = "somme" ;
LIST Peu = "peu de" ;
LIST Helas = "hélas" ;
LIST Des = "dès" ;
LIST Entre = "entre" ;
LIST Si = "si" ;
LIST S = "<s'>"i ;

LIST À = "à" ;

SET CM = (cm) OR (lpar) OR (rpar) OR ("<;>") ;
LIST Excl = "!" ;

LIST Title = "<[A-Z][a-z]\+>"r ;
LIST ConsInitiale = "<[BCDFGJKLMNPQRSTVWXZbcdfgjklmnpqrstvwxz].*>"r ;

SET Ant = (np ant) ;
SET Cog = (np cog) ;
SET Ant_Cog = Ant OR Cog ;

SET DetDef = (det def) ;
SET DetInd = (det ind) ;

SET QUI-QUE = Que | Qui ;

SET CLB = Subj | Cm ;

SET Noun_Adj = N OR A ;
SET Noun_Adj_PP = N OR A OR PP ;
SET Adj_PP = A OR PP ;

SET Barrera_Final_Estrict_SN = EOS OR Prep OR Det OR CnjSub OR CnjAdv OR Rel OR Pro ;

SECTION

REMOVE Cog IF (-1 DetDef) (0 Cog) ;
REMOVE Cog IF (-1 DetInd) (0 Cog) ;
REMOVE Ant IF (-1 DetDef) (0 Ant) ;
REMOVE Ant IF (-1 DetInd) (0 Ant) ;

SELECT Ant IF (0 Ant) (1C Ant) ;
	# Jean-René

SELECT NP IF (0 NP) (NOT -1 BOS) (NOT 0 ("Parlement")) ;
	# Traiem paraules que, per una raó o altra, es posen en majúscules sense ser NP
SELECT NP IF (0 NP) (0 N OR A OR PP) (-1 BOS) (1C Verb) ;		# René vient
SELECT NP IF (0 NP) (0 N OR A OR PP) (-1 BOS) (1 Adv) (2C Verb) ;	# René ne vient pas
SELECT Cog IF (0 Cog) (0 Ant) (-1C Ant) ;

REMOVE V IF (-2C Prep) (-1C A) (0 A OR V) ;
	# avec beaucoup de peine (!!)
REMOVE V IF (-2/* Prep) (-1C A) (0C A OR V) ;
	# des bones notes
	# hors du commun haura lieu

SELECT Prop IF (NOT -1 BOS) (0 Title) ;
  ## Lorsque Marie a fini de compter, elle regarde autour d'elle.

REMOVE Prs IF (NOT -1* QUI-QUE BARRIER CLB); 

REMOVE Pro IF (0 Le) (NOT 1 Verb) ;
  ## Le chien aime jouer avec les deux enfants.

REMOVE N IF (0 Fait) (-1 Il) ;
  ## Il fait beau aujourd'hui, il fait très chaud.

REMOVE N IF (0 Est) (-1 Interr OR Rel) ;
  ## Où est Jean ?

SELECT Adv IF (0 Pas) (-1 V LINK -1 Ne) ;
  ## Ils n'ont pas pu jouer dehors.

REMOVE Fin IF (0 Fin OR Prop) (0 Title) (1C Fin) ;
  ## Marie pense qu'elle a vu où Jean est allé :

REMOVE Ifi IF (0 Pri + P1 OR Ifi + P1) ;
REMOVE Ifi IF (0 Pri + P2 OR Ifi + P2) ;
  ## je vis, tu vis

SELECT Inf IF (0 Être) (-1 Vbmod) ;
  ## Ce doit être Jean ! 

SELECT Inf IF (0 Être) (-1 Pro) (-2 Vbmod) ;
  ## Le spécialiste lorrain du 10 kilomètres peut l'être.

SELECT Haver IF (0 Avoir) (1 PP) ;
  ## Est-ce que tu as vu Jean ?
SELECT V IF (-1 Avoir) (0 Avoir + PP) ;
  ## Le jeune homme a eu plus de
SELECT V IF (-2 Avoir) (-1 Adv) (0 Avoir + PP) ;
  ## Le jeune homme n'a pas eu plus de
SELECT V IF (0 Avoir) (1 ("lieu")) ;
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det OR Num) (2 N) ;
  ## Elle a une fille
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det) (2 A) (3 N) ;
  ## Elle a un petit secret
SELECT V IF (NOT -1 ("y")) (0C Haver OR V) (1 Det) (2 Predet OR Preadv OR Adv) (3 A) (4 N) ;
  ## Elle a un tout petit secret
  ## Elle a un très petit secret

SELECT Haver IF (0 Avoir) (1 Tn) (2 PP) ;
  ## As-tu vu Jean ?
SELECT Haver IF (0 Avoir) (1 Adv) (2 PP) ;
  ## n'ont pas vu, n'ont jamais vu
  
SELECT V IF (0 Avoir) (1C Prep) ;
  ## ayant pour ami

SELECT V IF (0 Avoir) (1 EOS) ;
  ## quels professeurs on va avoir.
## SELECT N IF (0 Avoir) (1 EOS) (-1 Num);	## CAL TREBALLAR-HI!
  ## 2 A.
## SELECT N IF (0 Avoir) (1 EOS) (-1 BOS);	## CAL TREBALLAR-HI!
  ## 2. A.

SELECT Prep IF (-1 BOS) (0 Avoir) (0 À) ;
  ## A la téle
  
REMOVE Imper IF (NOT 1* Excl) ;
REMOVE Imper IF (-1 Prn) ;

SELECT Fin IF (0C N OR Fin) (-1 N LINK -1 Prep OR Det) (NOT 1 N OR A) ;
  ## Les poules du couvent couvent

SELECT Fils IF (0C Fil OR Fils) (-1 Sg) ;
  ## Avec lequel elle aura un fils.

SELECT Fois IF (0C Foi OR Fois) ;

SELECT Mil IF (0C Mil OR Mille) (1 N OR A) (1 Pl) ;
  ## mille adhérents

SELECT Savoir IF (0C Savoir OR Saurer) ;
  ## ce problème ne saurait tout expliquer à lui seul

SELECT N IF (-1 Num) (0C N OR V) ;
  ## 9 combats

SELECT Tn IF (0 Lui) (1 Aussi);
SELECT Tn IF (0 Nous) (1 Aussi);
SELECT Tn IF (0 Vous) (1 Aussi);
SELECT Tn IF (0 Lui) (1 Même);
SELECT Tn IF (0 Nous) (1 Même + Pl);
SELECT Tn IF (0 Vous) (1 Même + Pl);
SELECT Tn IF (0 Lui) (-1C Prep) (NOT 1 Inf);
SELECT Tn IF (0 Nous) (-1C Prep) (NOT 1 Inf);
SELECT Tn IF (0 Vous) (-1C Prep) (NOT 1 Inf);
SELECT Pro IF (0 Lui) (-1C Prep) (1 Inf);
SELECT Pro IF (0 Nous) (-1C Prep) (1 Inf);
SELECT Pro IF (0 Vous) (-1C Prep) (1 Inf);

SELECT Tn IF (0 Tu) (1 VSg2);
  ## Tu veux
SELECT Tn IF (0 Tu) (1 Ne) (2 VSg2);
  ## Tu ne veux pas
SELECT Tn IF (0 Tu) (1 Pro) (2 VSg2);
  ## Tu lui veux
SELECT Tn IF (0 Tu) (1 Pro) (2 Pro) (3 VSg2);
  ## Tu lui en veux
SELECT Tn IF (0 Tu) (1 Ne) (2 Pro) (3 Pro) (4 VSg2);
  ## Tu ne lui veux pas
SELECT Tn IF (0 Tu) (1 Ne) (2 Pro) (3 VSg2);
  ## Tu ne lui veux pas

SELECT Pro IF (-1 Je) (0 Pro) (1 VSg1);
  ## Je vous parle
SELECT Pro IF (-2 Je) (-1 Ne) (0 Pro) (1 VSg1);
  ## Je ne vous parle pas
SELECT Pro IF (-1 Je) (0 Pro) (1 Pro) (2 VSg1);
  ## Je vous en parle
SELECT Pro IF (-2 Je) (-1 Ne) (0 Pro) (1 Pro) (2 VSg1);
  ## Je ne vous en parle pas
SELECT Pro IF (-1 Tu) (0 Pro) (1 VSg2);
  ## Tu nous parles
SELECT Pro IF (-2 Tu) (-1 Ne) (0 Pro) (1 VSg2);
  ## Tu ne nous parles pas
SELECT Pro IF (-1 Tu) (0 Pro) (1 Pro) (2 VSg2);
  ## Tu nous en parles
SELECT Pro IF (-2 Tu) (-1 Ne) (0 Pro) (1 Pro) (2 VSg2);
  ## Tu ne nous en parles pas
SELECT Pro IF (-1 Il + Sg) (0 Pro) (1 VSg3);
  ## Elle vous parle
SELECT Pro IF (-2 Il + Sg) (-1 Ne) (0 Pro) (1 VSg3);
  ## Elle ne vous parle pas
SELECT Pro IF (-1 Il + Sg) (0 Pro) (1 Pro) (2 VSg3);
  ## Elle vous en parle
SELECT Pro IF (-2 Il + Sg) (-1 Ne) (0 Pro) (1 Pro) (2 VSg3);
  ## Elle ne vous en parle pas
SELECT Pro IF (-1 Nous) (0 Pro) (1 VPl1);
  ## Nous vous parlons
SELECT Pro IF (-2 Nous) (-1 Ne) (0 Pro) (1 VPl1);
  ## Nous ne vous parlons pas
SELECT Pro IF (-1 Nous) (0 Pro) (1 Pro) (2 VPl1);
  ## Nous vous en parlons
SELECT Pro IF (-2 Nous) (-1 Ne) (0 Pro) (1 Pro) (2 VPl1);
  ## Nous ne vous en parlons pas
SELECT Pro IF (-1 Vous) (0 Pro) (1 VPl2);
  ## Vous nous parlez
SELECT Pro IF (-2 Vous) (-1 Ne) (0 Pro) (1 VPl2);
  ## Vous ne nous parlez pas
SELECT Pro IF (-1 Vous) (0 Pro) (1 Pro) (2 VPl2);
  ## Vous nous en parlez
SELECT Pro IF (-2 Vous) (-1 Ne) (0 Pro) (1 Pro) (2 VPl2);
  ## Vous ne nous en parlez pas
SELECT Pro IF (-1 Il + Pl) (0 Pro) (1 VPl3);
  ## Elles vous parlent
SELECT Pro IF (-2 Il + Pl) (-1 Ne) (0 Pro) (1 VPl3);
  ## Elles ne vous parlent pas
SELECT Pro IF (-1 Il + Pl) (0 Pro) (1 Pro) (2 VPl3);
  ## Elles vous en parlent
SELECT Pro IF (-2 Il + Pl) (-1 Ne) (0 Pro) (1 Pro) (2 VPl3);
  ## Elles ne vous en parlent pas


SELECT P1 IF (-1 Je) (0 VSg1);
  ## Je veux
SELECT P1 IF (-2 Je) (-1 Ne) (0 VSg1);
  ## Je ne veux pas
SELECT P1 IF (-2 Je) (-1 Pro) (0 VSg1);
  ## Je lui veux
SELECT P1 IF (-3 Je) (-2 Ne) (-1 Pro) (0 VSg1);
  ## Je ne lui veux pas
SELECT P1 IF (-3 Je) (-2 Pro) (-1 Pro) (0 VSg1);
  ## Je lui en veux
SELECT P1 IF (-4 Je) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg1);
  ## Je ne lui en veux pas
SELECT P2 IF (-1 Tu) (0 VSg2);
  ## Tu veux
SELECT P2 IF (-2 Tu) (-1 Ne) (0 VSg2);
  ## Tu ne veux pas
SELECT P2 IF (-2 Tu) (-1 Pro) (0 VSg2);
  ## Tu lui veux
SELECT P2 IF (-3 Tu) (-2 Ne) (-1 Pro) (0 VSg2);
  ## Tu ne lui veux pas
SELECT P2 IF (-3 Tu) (-2 Pro) (-1 Pro) (0 VSg2);
  ## Tu lui en veux
SELECT P2 IF (-4 Tu) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg2);
  ## Tu ne lui en veux pas
SELECT P3 IF (-1 Il + Sg) (0 VSg3);
  ## Elle parle
SELECT P3 IF (-2 Il + Sg) (-1 Ne) (0 VSg3);
  ## Elle ne parle pas
SELECT P3 IF (-2 Il + Sg) (-1 Pro) (0 VSg3);
  ## Elle lui parle
SELECT P3 IF (-3 Il + Sg) (-2 Ne) (-1 Pro) (0 VSg3);
  ## Elle ne lui parle pas
SELECT P3 IF (-3 Il + Sg) (-2 Pro) (-1 Pro) (0 VSg3);
  ## Elle lui en parle
SELECT P3 IF (-4 Il + Sg) (-3 Ne) (-2 Pro) (-1 Pro) (0 VSg3);
  ## Elle ne lui en parle pas

SELECT Tn IF (NOT -1 Prn) (0 Nous) (1 VPl1);
  ## parce que nous parlons
SELECT Tn IF (NOT -1 Prn) (0 Vous) (1 VPl2);
  ## parce que vous parlez

SELECT PP IF (-1 Haver) (0 PP) ;
  ## Vous avez dit
SELECT Sg IF (-1 Haver) (0 PP + Sg_Pl) ; 
  ## Vous avez pris
SELECT PP IF (-3 Ne) (-2 Haver) (0 PP) ;
  ## Vous n'avez pas dit
SELECT Sg IF (-3 Ne) (-2 Haver) (0 PP + Sg_Pl) ;
  ## Vous n'avez pas pris
SELECT PP IF (-4 Ne) (-3 Pro) (-2 Haver) (0 PP) ;
  ## Vous ne lui avez pas dit
SELECT Sg IF (-4 Ne) (-3 Pro) (-2 Haver) (0 PP + Sg_Pl) ;
  ## Vous ne lui avez pas pris
SELECT PP IF (-5 Ne) (-4 Pro) (-3 Pro) (-2 Haver) (0 PP) ;
  ## Vous ne le lui avez pas dit
SELECT Sg IF (-5 Ne) (-4 Pro) (-3 Pro) (-2 Haver) (0 PP + Sg_Pl) ;
  ## Vous ne le lui avez pas pris
SELECT PP IF (-3 Pro) (-2 Haver) (-1 Adv) (0 PP) ;
  ## Vous lui avez toujours dit
SELECT PP IF (-5 Ne) (-4 Pro) (-3 Haver) (-2 Adv) (-1 Adv) (0 PP) ;
SELECT Haver IF (-2 Ne) (-1 Pro) (-0 Haver) (1 Adv) (2 Adv) (3 PP) ;
  ## Vous ne lui avez pas toujours dit

SELECT PP IF (-1 Ser) (0 PP) (OC Verb) ;
  ## sont investis

SELECT N IF (-1 DetDef) (0C N OR Verb) (1 Prep) ;
  ## que le pouvoir de

REMOVE N IF (-1 Nous) (0 Somme OR Ser) ;
  ## nous sommes assaillis

SELECT Prep IF (0 En) (1C N OR A) ;

SELECT N IF (0 N OR A) (-1C Peu) (1 EOS) ;
	  ## peu de joueurs.
SELECT A IF (0 N OR A) (-1C Peu) (1C N) ;

SELECT Interj IF (0 Helas) ;
  ## triem ser hélas com a interjecció

SELECT Adv IF (-1 Des) (0 Verb OR Adv) ;
  ## dès maintenant

SELECT Prep IF (0 Entre) (1 Nous OR Vous OR Eux);
  ## entre nous, vous, eux, elles
SELECT Prep IF (0 Entre) (1 Il + Pl + Fem);
  ## entre elles
SELECT Prep IF (-2C Prep) (-1C N) (0 Entre) (1 Det) (2 N OR A) ;
  ## ne fait pas de différence entre les tyrannies
SELECT Prep IF (-3C Prep) (-2C N OR A) (-1C N OR A OR PP) (0 Entre) (1 Det) (2 N OR A) ;
  ## ne fait pas de grosses différences entre les tyrannies

SELECT Preadv IF (0 Si) (1 Adv OR Preadv);
  ## si bien / si mal

SELECT Adv IF (-1 Si) (0 Adv OR Preadv);
  ## si bien / si mal

SELECT Prn IF (0 S) (NOT 1 Il) ;
SELECT CnjAdv IF (0 S) (1 Il) ;
  ## s'affirme

SELECT Adv IF (-1 BOS) (0 Adv OR A) (1C Prep) ;
  ## Même sur le terrain

SELECT Masc_strict IF (0 Mon_Ton_Son) (1 ConsInitiale) ;
  ## mon père
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1C Fem_strict) ;
  ## mon amie
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1C Masc_strict) ;
  ## mon ami
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Fem) (2C Fem_strict) ;
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Masc) (2C Masc_strict) ;
SELECT Fem_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Fem) (2 Noun_Adj_PP + Fem) (3C Fem_strict) ;
SELECT Masc_strict IF (0 Mon_Ton_Son) (NOT 1 ConsInitiale) (1 Noun_Adj_PP + Masc) (2 Noun_Adj_PP + Masc) (3C Masc_strict) ;

REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1C Verb) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 Ser) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) ;
REMOVE A OR PP IF (NOT -2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) ;

REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 Barrera_Final_Estrict_SN OR Ant_Cog) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1C Verb) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 Ser) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascSg) (0 Noun_Adj_PP + $$MascSg LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemSg) (0 Noun_Adj_PP + $$FemSg LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$MascPl) (0 Noun_Adj_PP + $$MascPl LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;
REMOVE A OR PP IF (-2 ("comme")) (-1 Det + $$FemPl) (0 Noun_Adj_PP + $$FemPl LINK 0 N OR NP) (1 CM OR CnjCoo) (2 Barrera_Final_Estrict_SN) (NOT -1 DetDef) ;



